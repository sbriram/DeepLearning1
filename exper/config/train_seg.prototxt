# VGG 16-layer network convolutional finetuning
# Network modified to have smaller receptive field (128 pixels)
# and smaller stride (8 pixels) when run in convolutional mode.
#
# In this model we also change max pooling size in the first 4 layer
# from 2 to 3 while retaining stride = 2
# which makes it easier to exactly align responses at different layer.
#
# For alignment to work, we set (we choose 32x so as to be able to evaluate
# the model for all different subsampling sizes):
# (1) input dimension equal to
# $n = 32 * k - 31$, e.g., 321 (for k = 11)
# Dimension after pooling w. subsampling:
# (16 * k - 15); (8 * k - 7); (4 * k - 3); (2 * k - 1); (k).
# For k = 11, these translate to
#           161;          81;          41;          21;  11
# 

name: "DeepLab-LargeFOV"

layer {
  name: "data"
  type: "ImageSegData"
  top: "data"
  top: "label"
  image_data_param {
#    root_folder: "Your/path/to/VOC2012"
    root_folder: "/ws/ifp-06_1/dingliu2/data/Pascal_VOC2012/VOCdevkit/VOC2012"
    source: "list/train_aug.txt"
    label_type: PIXEL
    batch_size: 6
    shuffle: true
  }
  transform_param {
    mean_value: 104.008
    mean_value: 116.669
    mean_value: 122.675
    crop_size: 321
    mirror: true
  }
  include: { phase: TRAIN }
}

### DENOISING NETWORK ###

layer {
  name: "padding_data"
  type: "Padding"
  bottom: "data"
  top: "data_padded"
  padding_param {
    pad_beg: 3
    pad_end: 4
  }
}

layer {
  bottom: "data_padded"
  top: "noisy_data"
  name: "add_noise"
  type: "Noise"
  noise_param {
    filler_param {
      type: "gaussian"
      mean: 0
    }
    std: 30
  }
}

layer {
  name: "conv0"
  type: "Convolution"
  bottom: "noisy_data"
  top: "conv0"
  param {
    name: "conv0_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv0_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 0
    kernel_size: 5
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1"
  type: "Convolution"
  bottom: "conv0"
  top: "conv1"
  param {
    name: "conv1_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv1_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv1_bn"
  type: "BatchNorm"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "conv1_Scale"
  type: "Scale"
  bottom: "conv1"
  top: "conv1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv1_ReLU"
  type: "ReLU"
  bottom: "conv1"
  top: "conv1"
}
layer {
  name: "residual_1_branch2a"
  type: "Convolution"
  bottom: "conv1"
  top: "Convolution1"
  param {
    name: "residual_1_branch2a_w"
    lr_mult: 1
  }
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "residual_1_bn_branch2a"
  type: "BatchNorm"
  bottom: "Convolution1"
  top: "Convolution1"
}
layer {
  name: "residual_1_scale_branch2a"
  type: "Scale"
  bottom: "Convolution1"
  top: "Convolution1"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "residual_1_branch2a_ReLU"
  type: "ReLU"
  bottom: "Convolution1"
  top: "Convolution1"
}
layer {
  name: "residual_1_branch2b"
  type: "Convolution"
  bottom: "Convolution1"
  top: "Convolution2"
  param {
    name: "residual_1_branch2b_w"
    lr_mult: 1
  }
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "residual_1_bn_branch2b"
  type: "BatchNorm"
  bottom: "Convolution2"
  top: "Convolution2"
}
layer {
  name: "residual_1_scale_branch2b"
  type: "Scale"
  bottom: "Convolution2"
  top: "Convolution2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "residual_1_branch2b_ReLU"
  type: "ReLU"
  bottom: "Convolution2"
  top: "Convolution2"
}
layer {
  name: "residual_1_branch2c"
  type: "Convolution"
  bottom: "Convolution2"
  top: "Convolution3"
  param {
    name: "residual_1_branch2c_w"
    lr_mult: 1
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "residual_1_bn_branch2c"
  type: "BatchNorm"
  bottom: "Convolution3"
  top: "Convolution3"
}
layer {
  name: "residual_1_scale_branch2c"
  type: "Scale"
  bottom: "Convolution3"
  top: "Convolution3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "residual_1"
  type: "Eltwise"
  bottom: "conv1"
  bottom: "Convolution3"
  top: "Eltwise1"
}
layer {
  name: "residual_1_ReLU"
  type: "ReLU"
  bottom: "Eltwise1"
  top: "Eltwise1"
}
layer {
  name: "conv2"
  type: "Convolution"
  bottom: "Eltwise1"
  top: "conv2"
  param {
    name: "conv2_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv2_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
    group: 1
    stride: 2
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv2_bn"
  type: "BatchNorm"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "conv2_Scale"
  type: "Scale"
  bottom: "conv2"
  top: "conv2"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv2_ReLU"
  type: "ReLU"
  bottom: "conv2"
  top: "conv2"
}
layer {
  name: "residual_2_branch2a"
  type: "Convolution"
  bottom: "conv2"
  top: "Convolution4"
  param {
    name: "residual_2_branch2a_w"
    lr_mult: 1
  }
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "residual_2_bn_branch2a"
  type: "BatchNorm"
  bottom: "Convolution4"
  top: "Convolution4"
}
layer {
  name: "residual_2_scale_branch2a"
  type: "Scale"
  bottom: "Convolution4"
  top: "Convolution4"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "residual_2_branch2a_ReLU"
  type: "ReLU"
  bottom: "Convolution4"
  top: "Convolution4"
}
layer {
  name: "residual_2_branch2b"
  type: "Convolution"
  bottom: "Convolution4"
  top: "Convolution5"
  param {
    name: "residual_2_branch2b_w"
    lr_mult: 1
  }
  convolution_param {
    num_output: 32
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "residual_2_bn_branch2b"
  type: "BatchNorm"
  bottom: "Convolution5"
  top: "Convolution5"
}
layer {
  name: "residual_2_scale_branch2b"
  type: "Scale"
  bottom: "Convolution5"
  top: "Convolution5"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "residual_2_branch2b_ReLU"
  type: "ReLU"
  bottom: "Convolution5"
  top: "Convolution5"
}
layer {
  name: "residual_2_branch2c"
  type: "Convolution"
  bottom: "Convolution5"
  top: "Convolution6"
  param {
    name: "residual_2_branch2c_w"
    lr_mult: 1
  }
  convolution_param {
    num_output: 128
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "residual_2_bn_branch2c"
  type: "BatchNorm"
  bottom: "Convolution6"
  top: "Convolution6"
}
layer {
  name: "residual_2_scale_branch2c"
  type: "Scale"
  bottom: "Convolution6"
  top: "Convolution6"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "residual_2"
  type: "Eltwise"
  bottom: "conv2"
  bottom: "Convolution6"
  top: "Eltwise2"
}
layer {
  name: "residual_2_ReLU"
  type: "ReLU"
  bottom: "Eltwise2"
  top: "Eltwise2"
}
layer {
  name: "upsample_r2",
  type: "Deconvolution"
  bottom: "Eltwise2"
  top: "upsample_r2"
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 32
    pad: 1
    weight_filler: { type: "xavier" }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
}
layer {
  name: "concat_r2"
  type: "Concat"
  bottom: "Eltwise1"
  bottom: "upsample_r2"
  top: "concat_r2"
}
layer {
  name: "conv3"
  type: "Convolution"
  bottom: "concat_r2"
  top: "conv3"
  param {
    name: "conv3_w"
    lr_mult: 1
    decay_mult: 1
  }
  param {
    name: "conv3_b"
    lr_mult: 2
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "conv3_bn"
  type: "BatchNorm"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "conv3_Scale"
  type: "Scale"
  bottom: "conv3"
  top: "conv3"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "conv3_ReLU"
  type: "ReLU"
  bottom: "conv3"
  top: "conv3"
}
layer {
  name: "residual_3_branch2a"
  type: "Convolution"
  bottom: "conv3"
  top: "Convolution7"
  param {
    name: "residual_3_branch2a_w"
    lr_mult: 1
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "residual_3_bn_branch2a"
  type: "BatchNorm"
  bottom: "Convolution7"
  top: "Convolution7"
}
layer {
  name: "residual_3_scale_branch2a"
  type: "Scale"
  bottom: "Convolution7"
  top: "Convolution7"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "residual_3_branch2a_ReLU"
  type: "ReLU"
  bottom: "Convolution7"
  top: "Convolution7"
}
layer {
  name: "residual_3_branch2b"
  type: "Convolution"
  bottom: "Convolution7"
  top: "Convolution8"
  param {
    name: "residual_3_branch2b_w"
    lr_mult: 1
  }
  convolution_param {
    num_output: 64
    bias_term: false
    pad: 1
    kernel_size: 3
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "residual_3_bn_branch2b"
  type: "BatchNorm"
  bottom: "Convolution8"
  top: "Convolution8"
}
layer {
  name: "residual_3_scale_branch2b"
  type: "Scale"
  bottom: "Convolution8"
  top: "Convolution8"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "residual_3_branch2b_ReLU"
  type: "ReLU"
  bottom: "Convolution8"
  top: "Convolution8"
}
layer {
  name: "residual_3_branch2c"
  type: "Convolution"
  bottom: "Convolution8"
  top: "Convolution9"
  param {
    name: "residual_3_branch2c_w"
    lr_mult: 1
  }
  convolution_param {
    num_output: 256
    bias_term: false
    pad: 0
    kernel_size: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
  }
}
layer {
  name: "residual_3_bn_branch2c"
  type: "BatchNorm"
  bottom: "Convolution9"
  top: "Convolution9"
}
layer {
  name: "residual_3_scale_branch2c"
  type: "Scale"
  bottom: "Convolution9"
  top: "Convolution9"
  scale_param {
    bias_term: true
  }
}
layer {
  name: "residual_3"
  type: "Eltwise"
  bottom: "conv3"
  bottom: "Convolution9"
  top: "Eltwise3"
}
layer {
  name: "residual_3_ReLU"
  type: "ReLU"
  bottom: "Eltwise3"
  top: "Eltwise3"
}
layer {
  name: "upsample",
  type: "Deconvolution"
  bottom: "Eltwise3"
  top: "upsample_r3"
  convolution_param {
    kernel_size: 4
    stride: 2
    num_output: 64
    pad: 1
    weight_filler: { type: "xavier" }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  param { lr_mult: 1 decay_mult: 1 }
  param { lr_mult: 1 decay_mult: 0 }
}
layer {
  name: "concat_r3"
  type: "Concat"
  bottom: "conv0"
  bottom: "upsample_r3"
  top: "concat_r3"
}
layer {
  name: "concat_reduction"
  type: "Convolution"
  bottom: "concat_r3"
  top: "concat_reduction"
  param {
    lr_mult: 0.1
    decay_mult: 1
  }
  param {
    lr_mult: 0.2
    decay_mult: 0
  }
  convolution_param {
    num_output: 3
    pad: 0
    kernel_size: 3
    group: 1
    stride: 1
    weight_filler {
      type: "xavier"
    }
    bias_filler {
      type: "constant"
      value: 0.2
    }
  }
}
layer {
  name: "noisy_data_crop"
  type: "Crop"
  bottom: "noisy_data"
  bottom: "concat_reduction"
  top: "crop_input"
  crop_param {
    axis: 2
    offset: 3
  }
}
layer {
        name: "sum"
        type: "Eltwise"
        bottom: "concat_reduction"
        bottom: "crop_input"
        top: "prediction"
        eltwise_param {
          operation: 1
        }
}

layer {
  name: "input_crop"
  type: "Crop"
  bottom: "data_padded"
  bottom: "concat_reduction"
  top: "data_crop"
  crop_param {
    axis: 2
    offset: 3
  }
}

layer {
  name: "recon_loss"
  type: "EuclideanLoss"
  bottom: "prediction"
  bottom: "data_crop"
  top: "recon_loss"
  loss_weight: 5e-9
  #loss_weight: 0
}

layer {
  name: "prediction_crop"
  type: "Padding"
  bottom: "prediction"
  top: "prediction_crop"
  padding_param {
    pad_beg: 0
    pad_end: -1
  }
}

### SEGMENTATION NETWORK ###

layer {
  bottom: "prediction_crop"
  top: "conv1_1"
  name: "conv1_1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_1"
  top: "conv1_1"
  name: "relu1_1"
  type: "ReLU"
}
layer {
  bottom: "conv1_1"
  top: "conv1_2"
  name: "conv1_2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 64
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv1_2"
  top: "conv1_2"
  name: "relu1_2"
  type: "ReLU"
}
layer {
  bottom: "conv1_2"
  top: "pool1"
  name: "pool1"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  bottom: "pool1"
  top: "conv2_1"
  name: "conv2_1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_1"
  top: "conv2_1"
  name: "relu2_1"
  type: "ReLU"
}
layer {
  bottom: "conv2_1"
  top: "conv2_2"
  name: "conv2_2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 128
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv2_2"
  top: "conv2_2"
  name: "relu2_2"
  type: "ReLU"
}
layer {
  bottom: "conv2_2"
  top: "pool2"
  name: "pool2"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  bottom: "pool2"
  top: "conv3_1"
  name: "conv3_1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_1"
  top: "conv3_1"
  name: "relu3_1"
  type: "ReLU"
}
layer {
  bottom: "conv3_1"
  top: "conv3_2"
  name: "conv3_2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_2"
  top: "conv3_2"
  name: "relu3_2"
  type: "ReLU"
}
layer {
  bottom: "conv3_2"
  top: "conv3_3"
  name: "conv3_3"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv3_3"
  top: "conv3_3"
  name: "relu3_3"
  type: "ReLU"
}
layer {
  bottom: "conv3_3"
  top: "pool3"
  name: "pool3"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
    pad: 1
  }
}
layer {
  bottom: "pool3"
  top: "conv4_1"
  name: "conv4_1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_1"
  top: "conv4_1"
  name: "relu4_1"
  type: "ReLU"
}
layer {
  bottom: "conv4_1"
  top: "conv4_2"
  name: "conv4_2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_2"
  top: "conv4_2"
  name: "relu4_2"
  type: "ReLU"
}
layer {
  bottom: "conv4_2"
  top: "conv4_3"
  name: "conv4_3"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    pad: 1
    kernel_size: 3
  }
}
layer {
  bottom: "conv4_3"
  top: "conv4_3"
  name: "relu4_3"
  type: "ReLU"
}
layer {
  bottom: "conv4_3"
  top: "pool4"
  name: "pool4"
  type: "Pooling"
  pooling_param {
    pool: MAX
    kernel_size: 3
    pad: 1
    stride: 1
  }
}
layer {
  bottom: "pool4"
  top: "conv5_1"
  name: "conv5_1"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_1"
  top: "conv5_1"
  name: "relu5_1"
  type: "ReLU"
}
layer {
  bottom: "conv5_1"
  top: "conv5_2"
  name: "conv5_2"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_2"
  top: "conv5_2"
  name: "relu5_2"
  type: "ReLU"
}
layer {
  bottom: "conv5_2"
  top: "conv5_3"
  name: "conv5_3"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 512
    #pad: 1
    pad: 2
    dilation: 2
    kernel_size: 3
  }
}
layer {
  bottom: "conv5_3"
  top: "conv5_3"
  name: "relu5_3"
  type: "ReLU"
}
layer {
  bottom: "conv5_3"
  top: "pool5"
  name: "pool5"
  type: "Pooling"
  pooling_param {
    pool: MAX
    #kernel_size: 2
    #stride: 2
    kernel_size: 3
    stride: 1
    pad: 1
  }
}

layer {
  bottom: "pool5"
  top: "pool5a"
  name: "pool5a"
  type: "Pooling"
  pooling_param {
    pool: AVE
    kernel_size: 3
    stride: 1
    pad: 1
  }
}

layer {
  bottom: "pool5a"
  top: "fc6"
  name: "fc6"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    pad: 12
    dilation: 12
    kernel_size: 3
  }
}
layer {
  bottom: "fc6"
  top: "fc6"
  name: "relu6"
  type: "ReLU"
}
layer {
  bottom: "fc6"
  top: "fc6"
  name: "drop6"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "fc6"
  top: "fc7"
  name: "fc7"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 1024
    kernel_size: 1
  }
}
layer {
  bottom: "fc7"
  top: "fc7"
  name: "relu7"
  type: "ReLU"
}
layer {
  bottom: "fc7"
  top: "fc7"
  name: "drop7"
  type: "Dropout"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layer {
  bottom: "fc7"
  top: "fc8_voc12"
  name: "fc8_voc12"
  type: "Convolution"
  param {
    lr_mult: 0
    decay_mult: 0
  }
  param {
    lr_mult: 0
    decay_mult: 0
  }
  convolution_param {
    num_output: 21
    kernel_size: 1
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}

layer {
  bottom: "label"
  top: "label_shrink"
  name: "label_shrink"
  type: "Interp"
  interp_param {
    shrink_factor: 8
    pad_beg: 0
    pad_end: 0
  }
}
layer {
  name: "loss"
  type: "SoftmaxWithLoss"
  bottom: "fc8_voc12"
  bottom: "label_shrink"
  loss_param {
    ignore_label: 255
  }
  include: { phase: TRAIN }
}
layer {
  name: "accuracy"
  type: "SegAccuracy"
  bottom: "fc8_voc12"
  bottom: "label_shrink"
  top: "accuracy"
  seg_accuracy_param {
    ignore_label: 255
  } 
}
